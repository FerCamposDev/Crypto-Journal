{"version":3,"sources":["Context/CryptoContext.tsx","utils/localStorage.ts","Context/cryptoReducer.ts","Context/InitialState.ts","Context/CryptoProvider.tsx","Context/helpers.ts","utils/blobStorage.ts","hooks/useMyCryptos.ts","components/Page/components/SettingsButton.tsx","components/Page/Page.tsx","Pages/Home/components/CryptoItem.tsx","hooks/useCryptos.ts","Pages/Home/components/Totals.tsx","hooks/useDollar.ts","Pages/Home/components/MyCryptos.tsx","Pages/Home/Home.tsx","Pages/AddCrypto/components/CryptoSelect.tsx","components/CryptoForm.tsx","Pages/AddCrypto/AddCrypto.tsx","Pages/SeeCrypto/CryptoCard.tsx","Pages/SeeCrypto/SeeCrypto.tsx","Pages/Edit/Edit.tsx","Pages/404/Page404.tsx","Router/Router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CryptoContext","createContext","saveCryptosStorage","myCryptos","localStorage","setItem","JSON","stringify","cryptoReducer","state","action","type","cryptos","payload","myNewCrypto","NEW_CRYPTO","id","uniqueString","date","Date","name","symbol","image","amount","price","current_price","INITIAL_STATE","CryptoProvider","children","useReducer","dispatch","getCryptos","useCallback","a","axios","get","res","data","getMyCryptos","storage","getItem","parse","forEach","crypto","getCryptosStorage","length","myCrypto","find","completeTodayCryptoData","setMyNewCrypto","newCrypto","Provider","value","addMyNewCrypto","setCryptoEdited","cryptoEdited","pos","findIndex","splice","deleteCrypto","importCryptos","file","text","downloadFile","blob","url","URL","createObjectURL","document","createElement","href","download","click","useMyCryptos","useContext","useEffect","Input","styled","display","SettingsButton","React","anchorEl","setAnchorEl","open","Boolean","handleFile","e","fileList","target","files","IconButton","onClick","event","currentTarget","Settings","Menu","onClose","MenuList","htmlFor","MenuItem","accept","onChange","ListItemIcon","Upload","fontSize","ListItemText","Blob","exportCryptos","Download","Page","props","title","history","useHistory","style","justifyContent","alignItems","Container","maxWidth","sx","p","m","Grid","container","item","goBack","ArrowBack","push","location","pathname","Typography","variant","align","pb","CryptoItem","total","ListItem","button","ListItemAvatar","Avatar","src","primary","xs","toFixed","secondary","ListItemSecondaryAction","edge","useCryptos","getCryptoPrice","toUpperCase","Number","console","log","getUSDTPrice","totalBid","Totals","dollars","ars","refreshTotals","Card","borderRadius","border","CardHeader","sm","subheader","useDollar","useState","dollarPriceArs","setDollarPriceArs","prices","prom","blue","ccb","getDollarPriceInArs","MyCryptos","totalDollars","setTotalDollars","totalArs","setTotalArs","intervalId","setInterval","clearInterval","List","width","bgcolor","map","Home","Paper","elevation","Button","fullWidth","mt","CryptoDialog","cryptoList","setCryptoList","Dialog","DialogTitle","DialogContent","TextField","label","toLowerCase","filtered","filter","includes","autoFocus","pt","minHeight","CryptoSelect","setOpen","CryptoForm","editCrypto","handleChange","disabled","defaultValue","toISOString","split","InputLabelProps","shrink","placeholder","color","my","AddCrypto","CryptoCard","currentPrice","handlePrice","setTotal","newTotal","mb","avatar","CardContent","toLocaleDateString","SeeCrypto","useParams","setMyCrypto","setCurrentPrice","result","updateCryptoPrice","interval","Edit","Page404","Router","basename","path","exact","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9f68c72b.chunk.js","sourcesContent":["import { createContext } from 'react';\nimport { Crypto, CryptoState } from '../types/types';\n\nexport type CryptoContextProps = {\n  state: CryptoState\n  getCryptos: () => void,\n  getMyCryptos: () => void,\n  setMyNewCrypto: (newCrypto: Crypto) => void,\n  addMyNewCrypto: () => void,\n  setCryptoEdited: (cryptoEdited: Crypto) => void,\n  deleteCrypto: (id: string) => void,\n}\n\nexport const CryptoContext = createContext<CryptoContextProps>({} as CryptoContextProps);","import { Crypto } from \"../types/types\";\n\nexport const saveCryptosStorage = (myCryptos: Crypto[] = []) => {\n  localStorage.setItem('myCryptos', JSON.stringify(myCryptos));\n}\n\nexport const getCryptosStorage = (): Crypto[] => {\n  const storage = localStorage.getItem('myCryptos');\n  if (storage) {\n    const myCryptos: Crypto[] = JSON.parse(storage);\n    myCryptos.forEach(crypto => {\n      crypto.date = new Date(crypto.date);\n    })\n    return myCryptos;\n  }\n  return [];\n}\n\n","import { Crypto, CryptoGecko, CryptoState } from \"../types/types\";\nimport { saveCryptosStorage } from \"../utils/localStorage\";\n\ntype Actions =\n  | { type: 'GET_CRYPTOS', payload: CryptoGecko[] }\n  | { type: 'GET_MY_CRYPTOS', payload: Crypto[] }\n  | { type: 'SET_MY_NEW_CRYPTO', payload: Crypto }\n  | { type: 'ADD_MY_CRYPTO', payload: Crypto }\n  | { type: 'UPDATE_MY_CRYPTO', payload: Crypto[] }\n  | { type: 'DELETE_MY_CRYPTO', payload: Crypto[] }\n\n\nexport const cryptoReducer = (state: CryptoState, action: Actions): CryptoState => {\n  switch (action.type) {\n    case 'GET_CRYPTOS':\n      return {\n        ...state,\n        cryptos: action.payload\n      };\n    case 'GET_MY_CRYPTOS':\n    case 'DELETE_MY_CRYPTO':\n    case 'UPDATE_MY_CRYPTO':\n      return {\n        ...state,\n        myCryptos: action.payload\n      };\n    case 'SET_MY_NEW_CRYPTO':\n      return {\n        ...state,\n        myNewCrypto: action.payload\n      };\n    case 'ADD_MY_CRYPTO':\n      saveCryptosStorage([...state.myCryptos, action.payload]);\n      return {\n        ...state,\n        myCryptos: [...state.myCryptos, action.payload]\n      };\n    default:\n      return state;\n  }\n}","import { Crypto, CryptoState } from \"../types/types\";\nimport uniqueString from 'unique-string';\n\nexport const NEW_CRYPTO: Crypto = {\n  id: uniqueString(),\n  date: new Date(),\n  name: \"\",\n  symbol: \"\",\n  image: \"\",\n  amount: 0,\n  price: 0,\n  current_price: 0\n}\n\nexport const INITIAL_STATE: CryptoState = {\n  cryptos: [],\n  myCryptos: [],\n  myNewCrypto: {...NEW_CRYPTO}\n}","import { useCallback, useReducer } from \"react\";\nimport axios from \"axios\";\nimport uniqueString from \"unique-string\";\nimport { Crypto, CryptoGecko } from \"../types/types\";\nimport { CryptoContext } from \"./CryptoContext\";\nimport { cryptoReducer } from \"./cryptoReducer\";\nimport { INITIAL_STATE, NEW_CRYPTO } from \"./InitialState\";\nimport { getCryptosStorage, saveCryptosStorage } from \"../utils/localStorage\";\nimport { completeTodayCryptoData } from \"./helpers\";\n\ninterface Props {\n  children: JSX.Element | JSX.Element[]\n}\n\nexport const CryptoProvider = ({ children }: Props) => {\n  const [state, dispatch] = useReducer(cryptoReducer, INITIAL_STATE);\n\n  const getCryptos = useCallback(async () => {\n    const res = await axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false');\n    dispatch({\n      type: 'GET_CRYPTOS',\n      payload: res.data as CryptoGecko[],\n    })\n  }, []);\n\n  const getMyCryptos = useCallback(() => {\n    const myCryptos = getCryptosStorage();\n    completeTodayCryptoData(myCryptos, state.cryptos);\n    dispatch({\n      type: 'GET_MY_CRYPTOS',\n      payload: myCryptos,\n    })\n  }, [state.cryptos]);\n\n  const setMyNewCrypto = (newCrypto: Crypto) => {\n    dispatch({\n      type: 'SET_MY_NEW_CRYPTO',\n      payload: newCrypto,\n    })\n  }\n\n  const setCryptoEdited = (cryptoEdited: Crypto) => {\n    let myCryptos = [...state.myCryptos];\n    const pos = myCryptos.findIndex(crypto => crypto.id === cryptoEdited.id);\n    if (pos) {\n      myCryptos.splice(pos, 1, cryptoEdited);\n    }\n    dispatch({\n      type: 'UPDATE_MY_CRYPTO',\n      payload: myCryptos,\n    })\n    saveCryptosStorage(myCryptos);\n  }\n\n  const addMyNewCrypto = () => {\n    dispatch({\n      type: 'ADD_MY_CRYPTO',\n      payload: state.myNewCrypto,\n    })\n\n    const newCrypto = { ...NEW_CRYPTO };\n    newCrypto.id = uniqueString();\n    setMyNewCrypto(newCrypto);\n  }\n\n  const deleteCrypto = (id: string) => {\n    let myCryptos = [...state.myCryptos];\n    const pos = myCryptos.findIndex(crypto => crypto.id === id);\n    myCryptos.splice(pos, 1);\n    dispatch({\n      type: 'DELETE_MY_CRYPTO',\n      payload: myCryptos,\n    });\n    saveCryptosStorage(myCryptos);\n  }\n\n  return (\n    <CryptoContext.Provider value={{\n      state,\n      getCryptos,\n      getMyCryptos,\n      setMyNewCrypto,\n      addMyNewCrypto,\n      setCryptoEdited,\n      deleteCrypto,\n    }}>\n      {children}\n    </CryptoContext.Provider>\n  )\n}","import { Crypto, CryptoGecko } from \"../types/types\";\n\nexport const completeTodayCryptoData = (myCryptos: Crypto[] = [], cryptos: CryptoGecko[] = []) => {\n  if (cryptos.length) {\n    myCryptos.forEach((myCrypto: Crypto) => {\n      const crypto = cryptos.find(crypto => crypto.symbol === myCrypto.symbol);\n      if (crypto) {\n        myCrypto.image = crypto.image;\n        myCrypto.current_price = crypto.current_price;\n      }\n    })\n  }\n};","import { Crypto } from \"../types/types\";\nimport { saveCryptosStorage } from \"./localStorage\";\n\nexport const exportCryptos = (cryptos: Crypto[] = []) => {\n  const blob = new Blob([JSON.stringify(cryptos, null, 2)], { type: 'application/json' });\n\n  downloadFile(blob);\n}\n\nexport const importCryptos = async (file: File) => {\n  const myCryptos = JSON.parse(await file.text());\n  \n  saveCryptosStorage(myCryptos);\n}\n\nfunction downloadFile(blob: Blob) {\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = 'my-crypto-list.json';\n  a.click();\n}","import { useContext, useEffect } from 'react'\nimport { CryptoContext } from '../Context/CryptoContext';\n\nconst useMyCryptos = () => {\n  const { \n    state, \n    getMyCryptos, \n    setMyNewCrypto,\n    addMyNewCrypto,\n    setCryptoEdited,\n    deleteCrypto,\n  } = useContext(CryptoContext)\n  const { myCryptos, myNewCrypto } = state;\n\n  useEffect(() => {\n    getMyCryptos();\n  }, [getMyCryptos]);\n\n  return {\n    myCryptos,\n    myNewCrypto,\n    setMyNewCrypto,\n    addMyNewCrypto,\n    setCryptoEdited,\n    deleteCrypto,\n    getMyCryptos,\n  }\n}\n\nexport default useMyCryptos;\n","import * as React from 'react';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport { IconButton, ListItemIcon, ListItemText, MenuList } from '@mui/material';\nimport { Download, Settings, Upload } from '@mui/icons-material';\nimport { exportCryptos, importCryptos } from '../../../utils/blobStorage';\nimport useMyCryptos from '../../../hooks/useMyCryptos';\n\nimport { styled } from '@mui/material/styles';\n\nconst Input = styled('input')({\n  display: 'none',\n});\n\nexport default function SettingsButton() {\n  const { myCryptos, getMyCryptos } = useMyCryptos();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleFile = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fileList = e.target.files;\n    if(fileList?.length){\n      const file = fileList[0];\n      await importCryptos(file);\n      getMyCryptos();\n    }\n  }\n\n  return (\n    <div>\n      <IconButton onClick={handleClick}>\n        <Settings />\n      </IconButton>\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n      >\n        <MenuList>\n          <label htmlFor=\"icon-button-file\">\n            <MenuItem >\n              <Input accept=\".json\" id=\"icon-button-file\" type=\"file\" onChange={handleFile}/>\n              <ListItemIcon>\n                <Upload fontSize=\"small\" />\n              </ListItemIcon>\n              <ListItemText>Import Cryptos</ListItemText>\n            </MenuItem>\n          </label>\n          <MenuItem onClick={() => exportCryptos(myCryptos)}>\n            <ListItemIcon>\n              <Download fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText>Export Cryptos</ListItemText>\n          </MenuItem>\n        </MenuList>\n      </Menu>\n    </div>\n  );\n}","import { ArrowBack, Home } from '@mui/icons-material';\nimport { Container, Grid, IconButton, Typography } from '@mui/material'\nimport { useHistory } from 'react-router';\n\nimport SettingsButton from './components/SettingsButton';\n\ninterface Props {\n  title: string\n  children: JSX.Element | JSX.Element[]\n}\n\nconst Page = (props: Props) => {\n  const { children, title } = props;\n  const history = useHistory();\n\n  const handleBack = () => {\n    history.goBack();\n  }\n\n  const handleHome = () => {\n    history.push('/');\n  }\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n      <Container maxWidth='md' sx={{ p: 0, m: 0 }}>\n        <Grid container justifyContent='space-between'>\n          <Grid item>\n            <IconButton onClick={handleBack}>\n              <ArrowBack />\n            </IconButton>\n            <IconButton onClick={handleHome}>\n              <Home />\n            </IconButton>\n          </Grid>\n          {\n            history.location.pathname === '/' &&\n            <Grid item>\n              <SettingsButton />\n            </Grid>\n          }\n        </Grid>\n        <Typography variant=\"h5\" align='center' sx={{ pb: 2 }}>\n          {title}\n        </Typography>\n        {children}\n      </Container>\n    </div>\n  )\n}\n\nexport default Page;\n","import ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Edit from '@mui/icons-material/Edit';\nimport Delete from '@mui/icons-material/Delete';\n\nimport { useHistory } from 'react-router';\nimport { Crypto } from '../../../types/types';\nimport useMyCryptos from '../../../hooks/useMyCryptos';\nimport Typography from '@mui/material/Typography'\nimport { Grid, ListItemSecondaryAction } from '@mui/material';\n\ninterface Props {\n  crypto: Crypto\n}\n\nconst CryptoItem = ({ crypto }: Props) => {\n  const history = useHistory();\n  const { deleteCrypto } = useMyCryptos();\n  const total = crypto.current_price * crypto.amount;\n\n  const seeCrypto = () => {\n    history.push(`/see/${crypto.symbol}`)\n  }\n\n  const editCrypto = () => {\n    history.push(`/edit/${crypto.id}`)\n  }\n\n  return (\n    <ListItem button>\n      <ListItemAvatar>\n        <Avatar src={crypto.image} />\n      </ListItemAvatar>\n      <ListItemText\n        onClick={seeCrypto}\n        primary={\n          <Grid container alignItems='center'>\n            <Grid item xs={6} >\n              <Typography variant=\"subtitle2\" >\n                {crypto.name}\n              </Typography>\n            </Grid>\n            <Grid item xs={6} >\n              <Typography variant=\"body1\" >\n                $ {total.toFixed(2)}\n              </Typography>\n            </Grid>\n          </Grid>\n        }\n        secondary={crypto.amount}\n      />\n      <ListItemSecondaryAction >\n        <IconButton onClick={editCrypto} >\n          <Edit fontSize='small' />\n        </IconButton>\n        <IconButton edge=\"end\" onClick={() => deleteCrypto(crypto.id)} >\n          <Delete fontSize='small' />\n        </IconButton>\n      </ListItemSecondaryAction >\n    </ListItem>\n  )\n}\n\nexport default CryptoItem\n","import { useContext, useEffect } from 'react'\nimport { CryptoContext } from '../Context/CryptoContext';\nimport axios from 'axios';\n\nconst useCryptos = () => {\n  const { state, getCryptos } = useContext(CryptoContext)\n  const { cryptos } = state;\n\n  useEffect(() => {\n    getCryptos();\n  }, [getCryptos])\n\n  const getCryptoPrice = async (symbol: string): Promise<number> => {\n    try {\n      const res = await axios.get(`https://api.binance.com/api/v3/ticker/price?symbol=${symbol.toUpperCase()}USDT`);\n      return Number(res.data.price);\n    } catch (error) {\n      console.log(`Error get crypto price: ${symbol} to usdt`, error);\n      return 0;\n    }\n  }\n\n  const getUSDTPrice = async (): Promise<number> => {\n    try {\n      const res = await axios.get('https://criptoya.com/api/decrypto/usdt/usd/1');\n      return Number(res.data.totalBid);\n    } catch (error) {\n      console.log(`Error get crypto price: USDT to usd`, error);\n      return 0;\n    }\n  }\n\n\n  return {\n    cryptos,\n    getCryptoPrice,\n    getUSDTPrice,\n  }\n}\n\nexport default useCryptos;\n","import { Card, CardHeader, Grid, Typography } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Refresh from '@mui/icons-material/Refresh';\n\ninterface Props {\n  dollars: number\n  ars: number\n  refreshTotals: () => void\n}\n\nconst Totals = (props: Props) => {\n  const { dollars, ars, refreshTotals } = props;\n  return (\n    <Card sx={{\n      borderRadius: '6px',\n      border: 'solid 1px',\n    }}>\n      <CardHeader\n        action={\n            <IconButton onClick={refreshTotals}>\n              <Refresh />\n            </IconButton>\n        }\n        title={\n          <Grid container alignItems='center'>\n            <Grid item xs={5} sm={5}>\n              <Typography variant=\"subtitle2\" align='center'>\n                USD\n              </Typography>\n            </Grid>\n            <Grid item xs={7} sm={7}>\n              <Typography variant=\"body1\" >\n                $ {dollars.toFixed(2)}\n              </Typography>\n            </Grid>\n          </Grid>\n        }\n        subheader={\n          <Grid container alignItems='center'>\n            <Grid item xs={5} sm={5}>\n              <Typography variant=\"subtitle2\" align='center'>\n                ARS\n              </Typography>\n            </Grid>\n            <Grid item xs={7} sm={7}>\n              <Typography variant=\"body1\" >\n                $ {ars.toFixed(2)}\n              </Typography>\n            </Grid>\n          </Grid>\n        }\n      />\n    </Card>\n  )\n}\n\nexport default Totals\n","import { useEffect, useState } from 'react';\nimport axios from \"axios\"\n\nconst useDollar = () => {\n  const [dollarPriceArs, setDollarPriceArs] = useState(0);\n\n  useEffect(() => {\n    async function getDollarPriceInArs() {\n      try {\n        const prices = await axios.get('https://criptoya.com/api/dolar');\n        const prom = (prices.data.blue + prices.data.ccb) / 2;\n        setDollarPriceArs(prom);\n      } catch (error) {\n        console.log('Error in get Dollar Price Ars',error);\n      }\n    }\n\n    getDollarPriceInArs();\n  }, []);\n\n  return {\n    dollarPriceArs,\n  }\n}\n\nexport default useDollar;\n","import { useCallback, useEffect, useState } from 'react';\nimport List from '@mui/material/List';\n\nimport useMyCryptos from '../../../hooks/useMyCryptos';\nimport { Crypto } from '../../../types/types';\nimport CryptoItem from './CryptoItem';\nimport useCryptos from '../../../hooks/useCryptos';\nimport Totals from './Totals';\nimport useDollar from '../../../hooks/useDollar';\n\nconst MyCryptos = () => {\n  const { myCryptos, setCryptoEdited } = useMyCryptos();\n  const { getCryptoPrice, getUSDTPrice } = useCryptos();\n  const { dollarPriceArs } = useDollar();\n  const [totalDollars, setTotalDollars] = useState(0);\n  const [totalArs, setTotalArs] = useState(0);\n\n  const refreshTotals = useCallback(() => {\n    myCryptos.forEach(async (myCrypto) => {\n      let price;\n      if (myCrypto.symbol !== 'usdt') {\n        price = await getCryptoPrice(myCrypto.symbol);\n      } else {\n        price = await getUSDTPrice();\n      }\n\n      if (price) {\n        myCrypto.current_price = price;\n        setCryptoEdited(myCrypto);\n      }\n    })\n  }, [myCryptos, getCryptoPrice, getUSDTPrice, setCryptoEdited]);\n\n  useEffect(() => {\n    let total = 0;\n    myCryptos.forEach(myCrypto => {\n      total += myCrypto.current_price * myCrypto.amount;\n    })\n    setTotalDollars(total);\n    setTotalArs(total * dollarPriceArs);\n\n    const intervalId = setInterval(() => {\n      refreshTotals();\n    }, 15000);\n\n    return () => clearInterval(intervalId);\n  }, [myCryptos, dollarPriceArs, refreshTotals]);\n\n  return (\n    <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\n      {\n        myCryptos.map((crypto: Crypto) => (\n          <CryptoItem crypto={crypto} key={crypto.id} />\n        ))\n      }\n      <Totals\n        dollars={totalDollars}\n        ars={totalArs}\n        refreshTotals={refreshTotals}\n      />\n    </List >\n  )\n}\n\nexport default MyCryptos;\n","import { useHistory } from 'react-router';\nimport { Button, Paper } from '@mui/material';\n\nimport Page from '../../components/Page/Page';\n\nimport useMyCryptos from '../../hooks/useMyCryptos';\nimport MyCryptos from './components/MyCryptos';\n\nconst Home = () => {\n  const { myCryptos } = useMyCryptos();\n  const history = useHistory();\n\n  return (\n    <Page title='Home'>\n      <Paper elevation={3}>\n        {myCryptos.length > 0 && <MyCryptos />}\n      </Paper>\n      <Button\n        variant='contained'\n        fullWidth\n        onClick={() => { history.push('add'); }}\n        sx={{ mt: 1 }}\n      >\n        add crypto\n      </Button>\n    </Page>\n  )\n}\n\nexport default Home\n","import React, { useEffect, useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport TextField from '@mui/material/TextField';\n\nimport useCryptos from '../../../hooks/useCryptos';\nimport { DialogContent } from '@mui/material';\nimport useMyCryptos from '../../../hooks/useMyCryptos';\nimport { CryptoGecko } from '../../../types/types';\n\nexport interface CryptoDialogProps {\n  open: boolean;\n  onClose: (value?: CryptoGecko) => void;\n}\n\nfunction CryptoDialog(props: CryptoDialogProps) {\n  const { onClose, open } = props;\n\n  const { cryptos } = useCryptos();\n  const { myNewCrypto, setMyNewCrypto } = useMyCryptos();\n  const [cryptoList, setCryptoList] = useState<Array<CryptoGecko>>([]);\n\n  useEffect(() => {\n    setCryptoList(cryptos)\n  }, [cryptos]);\n\n  const handleClose = () => {\n    onClose();\n    setCryptoList(cryptos);\n  };\n\n  const handleListItemClick = (value: CryptoGecko) => {\n    myNewCrypto.symbol = value.symbol;\n    myNewCrypto.name = value.name;\n    myNewCrypto.image = value.image;\n    myNewCrypto.current_price = value.current_price;\n    setMyNewCrypto(myNewCrypto);\n\n    onClose();\n    setCryptoList(cryptos);\n  };\n\n  const search = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.toLowerCase();\n    const filtered = cryptos.filter(crypto => crypto.name.toLowerCase().includes(value) || crypto.symbol.includes(value))\n    setCryptoList(filtered);\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={open} fullWidth >\n      <DialogTitle>\n        Select crypto\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          sx={{ mt: 2 }}\n          label=\"Search\"\n          onChange={search}\n          fullWidth\n          autoFocus\n        />\n        <List sx={{ pt: 0, minHeight: '70vh' }}>\n          {cryptoList.map((crypto) => (\n            <ListItem button\n              onClick={() => handleListItemClick(crypto)}\n              key={crypto.symbol}\n            >\n              <ListItemAvatar>\n                <Avatar src={crypto.image} />\n              </ListItemAvatar>\n              <ListItemText primary={`${crypto.name} (${crypto.symbol})`} />\n            </ListItem>\n          ))}\n        </List>\n      </  DialogContent>\n    </Dialog>\n  );\n}\n\nexport default function CryptoSelect() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <br />\n      <Button\n        variant=\"outlined\"\n        onClick={handleClickOpen}\n        fullWidth\n      >\n        Select crypto\n      </Button>\n      <CryptoDialog\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n  );\n}","\nimport React from 'react';\nimport { useHistory } from 'react-router';\nimport uniqueString from 'unique-string';\nimport { Button, Grid, TextField } from '@mui/material';\n\nimport { Crypto } from '../types/types';\nimport { NEW_CRYPTO } from '../Context/InitialState';\nimport useMyCryptos from '../hooks/useMyCryptos';\n\nconst CryptoForm = ({ editCrypto }: { editCrypto?: Crypto }) => {\n  const history = useHistory();\n  const {\n    myNewCrypto,\n    setMyNewCrypto,\n    addMyNewCrypto,\n    setCryptoEdited,\n  } = useMyCryptos();\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let value :string | Date = e.target.value;\n    const name = e.target.name;\n\n    if (name === 'date') {\n      value = new Date(value);\n    }\n\n    if (editCrypto) {\n      (editCrypto as any)[name] = value;\n    } else {\n      (myNewCrypto as any)[name] = value;\n      setMyNewCrypto(myNewCrypto);\n    }\n  }\n\n  const clearNewCrypto = () => {\n    let newCrypto = { ...NEW_CRYPTO };\n    newCrypto.id = uniqueString();\n    setMyNewCrypto(newCrypto);\n  }\n\n  const saveCrypto = () => {\n    if (editCrypto) {\n      setCryptoEdited(editCrypto);\n    } else {\n      addMyNewCrypto();\n    }\n    history.push('/');\n  }\n\n  return (\n    <Grid container alignItems='center' justifyContent='space-around'>\n      <Grid item xs={5} sm={5} sx={{ m: 1 }}>\n        <TextField\n          fullWidth\n          variant=\"standard\"\n          label=\"Name\"\n          value={(editCrypto && editCrypto.name) || myNewCrypto.name}\n          disabled\n        />\n      </Grid>\n      <Grid item xs={5} sm={5} sx={{ m: 1 }}>\n        <TextField\n          fullWidth\n          variant=\"standard\"\n          label=\"Symbol\"\n          value={(editCrypto && editCrypto.symbol) || myNewCrypto.symbol}\n          disabled\n        />\n      </Grid>\n      <Grid item xs={12} sm={3} sx={{ m: 1 }}>\n        <TextField\n          label=\"Date\"\n          type=\"date\"\n          defaultValue={myNewCrypto.date.toISOString().split('T')[0]}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          fullWidth\n          name='date'\n          onChange={handleChange}\n        />\n      </Grid>\n      <Grid item xs={12} sm={3} sx={{ m: 1 }}>\n        <TextField\n          fullWidth\n          label=\"Amount\"\n          defaultValue={(editCrypto && editCrypto.amount) || myNewCrypto.amount || ''}\n          onChange={handleChange}\n          name='amount'\n          type='number'\n          placeholder='0.01234567'\n        />\n      </Grid>\n      <Grid item xs={12} sm={3} sx={{ m: 1 }}>\n        <TextField\n          fullWidth\n          label=\"Purchase price (usd)\"\n          defaultValue={(editCrypto && editCrypto.price) || myNewCrypto.price || ''}\n          onChange={handleChange}\n          name='price'\n          type='number'\n          placeholder='2.56'\n        />\n      </Grid>\n      <Grid container justifyContent='space-around'>\n        {\n          !editCrypto &&\n          <Grid item xs={12} sm={5}>\n            <Button\n              variant='contained'\n              color='secondary'\n              fullWidth\n              sx={{ my: 1 }}\n              onClick={clearNewCrypto}\n            >\n              CLEAR\n            </Button>\n          </Grid>\n        }\n        <Grid item xs={12} sm={5}>\n          <Button\n            variant='contained'\n            fullWidth\n            sx={{ my: 1 }}\n            onClick={saveCrypto}\n          >\n            {editCrypto ? 'EDIT' : 'ADD'}\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default CryptoForm;\n","import { Avatar, Grid } from '@mui/material';\nimport useMyCryptos from '../../hooks/useMyCryptos';\n\nimport Page from '../../components/Page/Page';\nimport CryptoSelect from './components/CryptoSelect';\nimport Form from '../../components/CryptoForm';\n\nconst AddCrypto = () => {\n  const { myNewCrypto } = useMyCryptos();\n\n  return (\n    <Page title='Add Crypto'>\n      <>\n        <CryptoSelect />\n        {\n          myNewCrypto.image &&\n          <Grid container alignItems='center' justifyContent='center' sx={{ pt: 3 }}>\n            <Avatar src={myNewCrypto.image} />\n            <Form />\n          </Grid>\n        }\n      </>\n    </Page>\n  )\n}\n\nexport default AddCrypto;\n","import { useEffect, useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Refresh from '@mui/icons-material/Refresh';\n\nimport { Crypto } from '../../types/types';\nimport useDollar from '../../hooks/useDollar';\nimport { Grid } from '@mui/material';\n\ninterface CardProps {\n  crypto: Crypto\n  currentPrice: number\n  handlePrice: () => void\n}\n\nexport default function CryptoCard(props: CardProps) {\n  const { crypto, currentPrice, handlePrice } = props;\n  const [total, setTotal] = useState(currentPrice * crypto.amount);\n  const { dollarPriceArs } = useDollar();\n  const [totalArs, setTotalArs] = useState(total * dollarPriceArs);\n\n  useEffect(() => {\n    const newTotal = currentPrice * crypto.amount;\n    setTotal(newTotal);\n    setTotalArs(newTotal * dollarPriceArs);\n  }, [currentPrice, dollarPriceArs, crypto.amount]);\n\n  return (\n    <Card sx={{ width: '100%', mb: '15px' }}>\n      <CardHeader sx={{ m: 0, pb: 0 }}\n        avatar={\n          <Avatar src={crypto.image} />\n        }\n        action={\n          <IconButton aria-label=\"refresh\" onClick={handlePrice}>\n            <Refresh />\n          </IconButton>\n        }\n        title={crypto.symbol.toUpperCase()}\n        subheader={<><b>Balance:</b> {crypto.amount}</>}\n      />\n      <CardContent >\n        <Grid container>\n          <Grid item xs={6}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              <b>Date:</b> {crypto.date.toLocaleDateString()}.\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              <b>Purchase price:</b>&nbsp;u$d {crypto.price}\n              <br />\n              <b>Current price:</b>&nbsp;u$d {currentPrice.toFixed(2)}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" align='center'>\n              <br />\n              <b>Total: u$d</b> {total.toFixed(2)} - <b>ARS:</b> $ {totalArs.toFixed(2)}\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Grid } from '@mui/material';\n\nimport { Crypto } from '../../types/types';\nimport useMyCryptos from '../../hooks/useMyCryptos';\n\nimport Page from '../../components/Page/Page';\nimport CryptoCard from './CryptoCard';\nimport useCryptos from '../../hooks/useCryptos';\n\nconst SeeCrypto = () => {\n  const { myCryptos } = useMyCryptos();\n  const { getCryptoPrice } = useCryptos();\n  const { symbol }: any = useParams();\n\n  const [myCrypto, setMyCrypto] = useState<Array<Crypto>>([]);\n  const [currentPrice, setCurrentPrice] = useState(0);\n\n  useEffect(() => {\n    const result = myCryptos.filter(crypto => crypto.symbol === symbol);\n    if (result) {\n      setMyCrypto(result);\n    }\n  }, [symbol, myCryptos]);\n\n  const updateCryptoPrice = useCallback(async () => {\n    const price = await getCryptoPrice(symbol);\n    setCurrentPrice(price);\n  }, [setCurrentPrice, getCryptoPrice, symbol]);\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      updateCryptoPrice();\n    }, 10000);\n\n    return () => clearInterval(interval);\n  }, [updateCryptoPrice]);\n\n  return (\n    myCrypto.length > 0 ?\n      <Page title={myCrypto[0].name.toUpperCase()}>\n        <Grid container alignItems='center' justifyContent='center' >\n          {\n            myCrypto.map((crypto) => {\n              return (\n                <CryptoCard key={crypto.id}\n                  currentPrice={currentPrice || crypto.current_price}\n                  crypto={crypto}\n                  handlePrice={updateCryptoPrice}\n                />\n              )\n            })\n          }\n        </Grid>\n      </Page>\n      :\n      <Page title='Crypto not found'>\n        <>\n        </>\n      </Page>\n  )\n}\n\nexport default SeeCrypto;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Avatar, Grid } from '@mui/material';\nimport useMyCryptos from '../../hooks/useMyCryptos';\n\nimport Page from '../../components/Page/Page';\nimport Form from '../../components/CryptoForm';\nimport { Crypto } from '../../types/types';\n\nconst Edit = () => {\n  const { myCryptos } = useMyCryptos();\n  const { id }: any = useParams();\n  const [myCrypto, setMyCrypto] = useState<Crypto>();\n\n  useEffect(() => {\n    const result = myCryptos.find(crypto => crypto.id === id);\n    if (result) {\n      setMyCrypto(result);\n    }\n  }, [myCryptos, id]);\n\n  return (\n    <Page title={(myCrypto && myCrypto.name) || 'Crypto not found'}>\n      <>\n        {\n          (myCrypto && myCrypto.image) &&\n          <Grid container alignItems='center' justifyContent='center'>\n            <Avatar src={myCrypto.image} />\n            <Form editCrypto={myCrypto} />\n          </Grid>\n        }\n      </>\n    </Page>\n  )\n}\n\nexport default Edit;\n","\nconst Page404 = () => {\n  return (\n    <div>\n      Page not found\n    </div>\n  )\n}\n\nexport default Page404\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport Home from \"../Pages/Home/Home\";\nimport AddCrypto from \"../Pages/AddCrypto/AddCrypto\";\nimport SeeCrypto from \"../Pages/SeeCrypto/SeeCrypto\";\nimport Edit from \"../Pages/Edit/Edit\";\nimport Page404 from \"../Pages/404/Page404\";\n\nexport default function Router() {\n  return (\n    <BrowserRouter basename=\"/Crypto-Journal\">\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/add\" component={AddCrypto} />\n          <Route path=\"/see/:symbol\" component={SeeCrypto} />\n          <Route path=\"/edit/:id\" component={Edit} />\n          <Route path=\"*\" component={Page404} />\n        </Switch>\n    </BrowserRouter>\n  );\n}\n","import { CryptoProvider } from './Context/CryptoProvider';\nimport Router from './Router/Router';\n\nfunction App() {\n  return (\n    <CryptoProvider>\n      <Router />\n    </CryptoProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}